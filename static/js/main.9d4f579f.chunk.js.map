{"version":3,"sources":["asset/twitter.svg","components/quote-box.jsx","App.js","serviceWorker.js","index.js"],"names":["_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","_ref2","createElement","d","_ref","svgRef","title","props","width","height","viewBox","ref","ForwardRef","forwardRef","colorArr","QuoteBox","fetchQuote","e","fetch","then","res","json","console","log","setState","randomQuote","color","Math","floor","random","catch","err","message","state","document","body","style","backgroundColor","id","content","author","className","href","rel","onClick","React","Component","App","textDecoration","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","error"],"mappings":"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","file":"static/js/main.9d4f579f.chunk.js","sourcesContent":["function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M24 4.557c-.883.392-1.832.656-2.828.775 1.017-.609 1.798-1.574 2.165-2.724-.951.564-2.005.974-3.127 1.195-.897-.957-2.178-1.555-3.594-1.555-3.179 0-5.515 2.966-4.797 6.045-4.091-.205-7.719-2.165-10.148-5.144-1.29 2.213-.669 5.108 1.523 6.574-.806-.026-1.566-.247-2.229-.616-.054 2.281 1.581 4.415 3.949 4.89-.693.188-1.452.232-2.224.084.626 1.956 2.444 3.379 4.6 3.419-2.07 1.623-4.678 2.348-7.29 2.04 2.179 1.397 4.768 2.212 7.548 2.212 9.142 0 14.307-7.721 13.995-14.646.962-.695 1.797-1.562 2.457-2.549z\"\n});\n\nvar SvgTwitter = function SvgTwitter(_ref) {\n  var svgRef = _ref.svgRef,\n      title = _ref.title,\n      props = _objectWithoutProperties(_ref, [\"svgRef\", \"title\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 24,\n    height: 24,\n    viewBox: \"0 0 24 24\",\n    ref: svgRef\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", null, title) : null, _ref2);\n};\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  return /*#__PURE__*/React.createElement(SvgTwitter, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/twitter.f7e26250.svg\";\nexport { ForwardRef as ReactComponent };","import React from \"react\";\r\n// import { ReactComponent as Quote } from \"../asset/quote.svg\";\r\nimport { ReactComponent as Twitter } from \"../asset/twitter.svg\";\r\n// import { ReactComponent as Facebook } from \"../asset/facebook.svg\";\r\nconst colorArr = [\r\n  \"#683b47\",\r\n  \"#583280\",\r\n  \"#843147\",\r\n  \"#0a3e4b\",\r\n  \"#215940\",\r\n  \"#084341\",\r\n  \"#657a00\",\r\n  \"#3d1e7b\",\r\n  \"#65421d\",\r\n  \"#2d545e\",\r\n  \"#161748\",\r\n  \"#3c6f3c\",\r\n  \"#091f36\",\r\n  \"#232d3a\",\r\n  \"#9e363a\",\r\n  \"#7d4608\",\r\n  \"#c53211\",\r\n  \"#2e3830\",\r\n  \"#065c6f\",\r\n  \"#15675a\",\r\n];\r\nclass QuoteBox extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      randomQuote: null,\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    fetch(\"https://api.quotable.io/random\")\r\n      .then((res) => {\r\n        return res.json();\r\n      })\r\n      .then((res) => {\r\n        console.log(res);\r\n        this.setState({\r\n          randomQuote: res,\r\n          color: colorArr[Math.floor(Math.random() * 21)],\r\n        });\r\n      })\r\n      .catch((err) => {\r\n        console.log(\"Error occurred while getting quote\", err.message);\r\n      });\r\n  }\r\n  fetchQuote = (e) => {\r\n    fetch(\"https://api.quotable.io/random\")\r\n      .then((res) => {\r\n        return res.json();\r\n      })\r\n      .then((res) => {\r\n        console.log(res);\r\n        this.setState({\r\n          randomQuote: res,\r\n          color: colorArr[Math.floor(Math.random() * 21)],\r\n        });\r\n      })\r\n      .catch((err) => {\r\n        console.log(\"Error occurred while getting quote\", err.message);\r\n      });\r\n  };\r\n  render() {\r\n    const color = this.state.color ? this.state.color : \"#8a2be2\";\r\n    document.body.style.backgroundColor = color;\r\n    return (\r\n      <div id=\"quote-box\">\r\n        <div id=\"quote-text\">\r\n          {/* <Quote className=\"left-quote\" /> */}\r\n          <p id=\"text\" style={{ color: color }}>\r\n            {this.state.randomQuote\r\n              ? this.state.randomQuote.content\r\n              : \"Loading Quote...\"}\r\n          </p>\r\n        </div>\r\n        <div id=\"author\" style={{ color: color }}>\r\n          -{this.state.randomQuote ? this.state.randomQuote.author : \"\"}\r\n        </div>\r\n        <div className=\"buttons\">\r\n          <a\r\n            style={{ backgroundColor: color }}\r\n            id=\"tweet-quote\"\r\n            href={`https://twitter.com/intent/tweet?text=${\r\n              this.state.randomQuote\r\n                ? this.state.randomQuote.content\r\n                : \"Quote not available yet\"\r\n            }`}\r\n            target=\"_blank\"\r\n            rel=\"noopener noreferrer\"\r\n            className=\"tweet-quote\"\r\n            title=\"Tweet this quote\"\r\n          >\r\n            <Twitter />\r\n          </a>\r\n          {/* <a\r\n            id=\"facebook-quote\"\r\n            href=\"http://\"\r\n            target=\"_blank\"\r\n            rel=\"noopener noreferrer\"\r\n            className=\"tweet-quote ml-5\"\r\n          >\r\n            <Facebook />\r\n          </a> */}\r\n          <button\r\n            style={{ backgroundColor: color }}\r\n            onClick={this.fetchQuote}\r\n            id=\"new-quote\"\r\n          >\r\n            New Quote\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default QuoteBox;\r\n","import React from \"react\";\nimport \"./App.scss\";\n\nimport QuoteBox from \"./components/quote-box\";\n\nfunction App() {\n  return (\n    <div className=\"container\">\n      <QuoteBox />\n      <p style={{ color: \"#ffff\" }}>\n        {\"by \"}\n        <a\n          style={{ textDecoration: \"none\", color: \"#ffff\" }}\n          id=\"tweet-quote\"\n          href=\"https://www.linkedin.com/in/vishal345/\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Vishal\n        </a>\n      </p>\n      <p style={{ color: \"#ffff\" }}>\n        {\"Using \"}\n        <a\n          style={{ textDecoration: \"none\", color: \"#ffff\" }}\n          id=\"tweet-quote\"\n          href=\"https://github.com/lukePeavey/quotable\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Quotable API\n        </a>\n      </p>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}